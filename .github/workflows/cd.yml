name: Docker Image CI

#on: workflow_dispatch
on:
  push:
    branches: [ "main" ]

permissions:
  contents: write

env:
  ECR_REPOSITORY: nginx
  EKS_CLUSTER_NAME_STG: main-stg
  EKS_CLUSTER_NAME_PRD: main-prd
  AWS_REGION: us-east-1
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref_name }}
    steps:
    - name: Check out Code
      uses: actions/checkout@v3
    ### Configure AWS Access
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}
    - name: Configure ArgoCD CLI
      run: |
        curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x /usr/local/bin/argocd        
    ### Deploy ArgoCD Application, only run if application file was updated
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          application:
            - 'argocd/**'
    - name: Deploy ArgoCD application in Staging
      run: |
        aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME_STG }} --region ${{ env.AWS_REGION }}
        argocd login $(kubectl get service argocd-server -n argocd --output=jsonpath='{.status.loadBalancer.ingress[0].hostname}') --username admin --password $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo) --insecure
        argocd repo add https://github.com/dlopezb93/sample-argocd-nginx-deployment --username dlopezb93 --password ${{ secrets.GIT_BOT_TOKEN }}
        kubectl apply -f argocd/application.yaml -f charts/nginx/values-stg.yaml
    - name: Deploy ArgoCD application in Production
      if: steps.changes.outputs.application == 'true'
      run: |
        aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME_PRD }} --region ${{ env.AWS_REGION }}
        argocd login $(kubectl get service argocd-server -n argocd --output=jsonpath='{.status.loadBalancer.ingress[0].hostname}') --username admin --password $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo) --insecure        
        argocd repo add https://github.com/dlopezb93/sample-argocd-nginx-deployment --username dlopezb93 --password ${{ secrets.GIT_BOT_TOKEN }}
        kubectl apply -f argocd/application.yaml -f charts/nginx/values-prd.yaml
    # argocd repo add https://github.com/dlopezb93/sample-argocd-nginx-deployment --username dlopezb93 --password ${{ secrets.GIT_BOT_TOKEN }}